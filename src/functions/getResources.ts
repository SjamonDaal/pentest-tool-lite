import { URL } from 'url';
import getObject from './getObject';

export default function(result: any): string[] {
  let scripts = getObject(result.html, 'type', 'script');
  let stylesheets = getObject(result.html, 'name', 'link');
  let references = getObject(result.html, 'name', 'a');
  let images = getObject(result.html, 'name', 'img');

  scripts = scripts.filter((script) => {
    return script.hasOwnProperty('attribs') && script.attribs.hasOwnProperty('src');
  });

  stylesheets = stylesheets.filter((stylesheet) => {
    return stylesheet.hasOwnProperty('attribs')
      && stylesheet.attribs.hasOwnProperty('rel')
      && stylesheet.attribs.rel === 'stylesheet';
  });

  const origin = (new URL(result.url)).origin;

  scripts = scripts.map((script) => {
    if (!script.attribs.src.startsWith('http') && script.attribs.src.startsWith('./')) {
      // this is tricky one
      // why? what was my thoughts here? :-(
      if (result.url.endsWith('/')) {
        return result.url + script.attribs.src.substring(2);
      }
      return result.url + script.attribs.src.substring(1);
    }
    if (!script.attribs.src.startsWith('http') && script.attribs.src.startsWith('/')) {
      return origin + script.attribs.src;
    }
    if (!script.attribs.src.startsWith('http')) {
      return origin + '/' + script.attribs.src;
    }

    return script.attribs.src;
  });

  stylesheets = stylesheets.map((stylesheet) => {
    if (!stylesheet.attribs.href.startsWith('http') && stylesheet.attribs.href.startsWith('./')) {
      // this is tricky one
      // why? what was my thoughts here? :-(
      if (result.url.endsWith('/')) {
        return result.url + stylesheet.attribs.src.substring(2);
      }
      return result.url + stylesheet.attribs.src.substring(1);
    }
    if (!stylesheet.attribs.href.startsWith('http') && stylesheet.attribs.href.startsWith('/')) {
      return origin + stylesheet.attribs.href;
    }
    if (!stylesheet.attribs.href.startsWith('http')) {
      return origin + '/' + stylesheet.attribs.href;
    }
    return stylesheet.attribs.href;
  });

  references = references.filter((reference) => {
    return reference.hasOwnProperty('attribs')
      && reference.attribs.hasOwnProperty('href')
      && reference.attribs.href.startsWith('http');
  });

  references = references.map((reference) => {
    return reference.attribs.href;
  });

  images = images.filter((image) => {
    return image.hasOwnProperty('attribs') && image.attribs.hasOwnProperty('src');
  });

  images = images.map((image) => {
    if (!image.attribs.src.startsWith('http') && image.attribs.src.startsWith('./')) {
      // this is tricky one
      // why? what was my thoughts here? :-(
      if (result.url.endsWith('/')) {
        return result.url + image.attribs.src.substring(2);
      }
      return result.url + image.attribs.src.substring(1);
    }
    if (!image.attribs.src.startsWith('http') && image.attribs.src.startsWith('/')) {
      return origin + image.attribs.src;
    }
    if (!image.attribs.src.startsWith('http')) {
      return origin + '/' + image.attribs.src;
    }

    return image.attribs.src;
  });

  return [...scripts, ...stylesheets, ...references, ...images];
}
