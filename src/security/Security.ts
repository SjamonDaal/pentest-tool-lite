import Test from '../Test';
import Cookies from './Cookies';
import FingerPrint from './FingerPrint';
import HSTS from './HSTS';
import HTTPS from './HTTPS';
import XFrameOptions from './XFrameOptions';
import XXSSProtection from './XXSSProtection';

class Security extends Test {
  protected factory: IFactory;

  constructor(factory: IFactory, config: any) {
    super(config);
    this.factory = factory;
  }

  public async run(url: string): Promise<IResult> {
    const request = this.factory.getRequest();
    const logger = this.factory.getLogger();

    const results = [
      await this.runTest('https', new HTTPS(request, logger), url),
      await this.runTest('XFrameOptions', new XFrameOptions(request, logger), url),
      await this.runTest('XXSSProtection', new XXSSProtection(request, logger), url),
      await this.runTest('hsts', new HSTS(request, logger), url),
      await this.runTest('fingerprint', new FingerPrint(request, logger), url),
      await this.runTest('cookies', new Cookies(request, logger), url),
    ].filter((test) => test !== null);

    return this.getResult('Security', this.getStatus(results), results);
  }
}

export default Security;
