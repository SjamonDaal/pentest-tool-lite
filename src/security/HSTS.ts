import Test from '../Test';

/**
 * HTTP Strict Transport Security
 *
 * Recommended value is at least one year (31536000).
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
 * @see https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
 */
class HSTS extends Test {
  protected request: IRequest;

  protected logger: ILogger;

  protected minValue: number = 31536000;

  constructor(request: IRequest, logger: ILogger) {
    super();
    this.request = request;
    this.logger = logger;
  }

  public async run(url: string): Promise<IResult> {
    this.logger.info('Starting HSTS test...');
    const result = await this.request.get(url);

    if (!result.response.headers.hasOwnProperty('strict-transport-security')) {
      return this.getResult('HSTS', 'ERROR');
    } else {
      const attributes = result.response.headers['strict-transport-security'].replace(' ', '').split(';');
      const maxAge = attributes.filter((attribute) => {
        return attribute.startsWith('max-age');
      }).shift().replace('max-age=', '');

      if (parseInt(maxAge, 10) < this.minValue) {
        return this.getResult('HSTS', 'WARNING');
      }
    }
    return this.getResult('HSTS', 'SUCCESSFUL');
  }
}

export default HSTS;
