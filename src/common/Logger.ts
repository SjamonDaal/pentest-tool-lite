class Logger implements ILogger {

  protected isDebug = false;
  protected isInfo = false;
  protected isVerbose = false;
  protected isWarning = false;
  protected isError = false;
  protected isWtf = false;

  constructor(level: string) {
    switch (level) {
      case 'WTF':
        this.isWtf = true;
      case 'ERROR':
        this.isError = true;
      case 'WARNING':
        this.isWarning = true;
      case 'VERBOSE':
        this.isVerbose = true;
      case 'INFO':
        this.isInfo = true;
      case 'DEBUG':
        this.isDebug = true;
    }
  }

  public debug(message: string): void {
    if (this.isDebug) {
      /* tslint:disable-next-line:no-console */
      console.log(message);
    }
  }

  public info(message: string): void {
    if (this.isInfo) {
      /* tslint:disable-next-line:no-console */
      console.log(message);
    }
  }

  public verbose(message: string): void {
    if (this.isVerbose) {
      /* tslint:disable-next-line:no-console */
      console.log(message);
    }
  }

  public warning(message: string): void {
    if (this.isWarning) {
      /* tslint:disable-next-line:no-console */
      console.log(message);
    }
  }

  public error(message: string): void {
    if (this.isError) {
      /* tslint:disable-next-line:no-console */
      console.error(message);
    }
  }

  public wtf(message: string): void {
    if (this.isWtf) {
      /* tslint:disable-next-line:no-console */
      console.error(message);
    }
  }
}

export default Logger;
